/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TranscriptionsImport } from './routes/transcriptions'
import { Route as TranscriptionsIndexImport } from './routes/transcriptions.index'
import { Route as TranscriptionsIdImport } from './routes/transcriptions.$id'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const ChatLazyImport = createFileRoute('/chat')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ChatLazyRoute = ChatLazyImport.update({
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/chat.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const TranscriptionsRoute = TranscriptionsImport.update({
  path: '/transcriptions',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TranscriptionsIndexRoute = TranscriptionsIndexImport.update({
  path: '/',
  getParentRoute: () => TranscriptionsRoute,
} as any)

const TranscriptionsIdRoute = TranscriptionsIdImport.update({
  path: '/$id',
  getParentRoute: () => TranscriptionsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/transcriptions': {
      preLoaderRoute: typeof TranscriptionsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      preLoaderRoute: typeof ChatLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/transcriptions/$id': {
      preLoaderRoute: typeof TranscriptionsIdImport
      parentRoute: typeof TranscriptionsImport
    }
    '/transcriptions/': {
      preLoaderRoute: typeof TranscriptionsIndexImport
      parentRoute: typeof TranscriptionsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  TranscriptionsRoute.addChildren([
    TranscriptionsIdRoute,
    TranscriptionsIndexRoute,
  ]),
  AboutLazyRoute,
  ChatLazyRoute,
  SettingsLazyRoute,
])

/* prettier-ignore-end */
